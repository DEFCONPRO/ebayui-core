import processHtmlAttributes from "../../common/html-attributes"
import safeRegex from "../../common/build-safe-regex"

static var ignoredAttributes = [
    "class",
    "style",
    "borderless",
    "autocomplete",
    "options"
];
static var itemIgnoredAttributes = ["text"];

$ var options = input.options || [];
$ var selectedOption = options[state.selectedIndex];
$ var currentValue = state.currentValue;
<span
    class:no-update=["combobox", input.class]
    style=input.style
    onExpander-expand("handleExpand")
    onExpander-collapse("handleCollapse")>
    <span class=[
        "combobox__control",
        input.borderless && "combobox__control--borderless"
    ]>
        <!--
        NOTE: Uses autocomplete="new-password" because of a problem with Chrome where the autfill does not
        respect the "off" key. Tested and works in all other browsers properly as well.
        -->
        <input
            ...processHtmlAttributes(input, ignoredAttributes)
            key="input"
            id:scoped="input"
            type="text"
            role="combobox"
            value=currentValue
            aria-autocomplete=input.autocomplete
            aria-haspopup="listbox"
            autocomplete="new-password"
            onBlur("handleComboboxBlur")
            onKeydown("handleComboboxKeyDown")
            onKeyup("handleComboboxKeyUp")/>
        <span class="combobox__icon" aria-hidden="true"/>
    </span>
    <if(options.length)>
        <div role="listbox" class="combobox__listbox" key="options" id:scoped="options">
            $ var currentValueReg = safeRegex(currentValue);
            <for|option| of=options>
                $ var isSelected = selectedOption === option;
                $ var isVisible = ((input.autocomplete === "list" &&
                        (isSelected || currentValueReg.test(option.text))) ||
                        input.autocomplete === "none"
                );
                <if(isVisible && option.text)>
                    <div
                        ...processHtmlAttributes(
                            option,
                            itemIgnoredAttributes
                        )
                        key="option[]"
                        role="option"
                        class:no-update=["combobox__option", option.class]
                        tabindex:no-update="-1"
                        aria-selected:no-update=(isSelected && "true")
                        onClick("handleOptionClick")
                        onMousedown("handleOptionMouseDown")>
                        <span>${option.text}</span>
                    </div>
                </if>
            </for>
        </div>
    </if>
</span>
