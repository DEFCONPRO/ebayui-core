import{a as D}from"./utils-NX-dnf4r.js";import{t as E}from"./index-iqhZMf16.js";import{t as T,r as B,b as I,g as R,d as $}from"./registry-EgEQwbXk.js";import{_ as K}from"./index-yCEzkr3d.js";import{_ as h}from"./render-tag-_0PNNh6Y.js";import{_ as j}from"./self-iterator-6yU_KG2T.js";import{C as z}from"./index-EOUynswU.js";import{c as M}from"./index-XjwwBzg5.js";import"./_commonjsHelpers-5-cIlDoe.js";import"./_commonjs-dynamic-modules-h-SxKiO4.js";import"./dynamic-tag-7vXwaVzE.js";import"./index-MJalx9GY.js";import"./index-rIGlTtcv.js";/* empty css             *//* empty css                    *//* empty css                       */import"./index-XA7SOYvr.js";import"./index-GHmufB2w.js";import"./preserve-attrs-lolIpBRv.js";import"./index-QozpcpzM.js";import"./index-J8CKH9U9.js";import"./index-QGVtTfuc.js";import"./index-4ijq5S5t.js";import"./index-l3FQEXUN.js";import"./index-ERL0bCNR.js";const O=`<h1 style="display: flex; justify-content: space-between; align-items: center;">
    <span>
        ebay-combobox
    </span>
    <span style="font-weight: normal; font-size: medium; margin-bottom: -15px;">
        DS v2.0.0
    </span>
</h1>

The \`<ebay-combobox>\` is a combination of a text \`<input>\`, and a listbox (\`aria-role="listbox"\`). It supports both written text by the user, as well as text selected from the listbox options.

## Examples and Documentation

-   [Storybook](https://ebay.github.io/ebayui-core/?path=/story/form-input-ebay-combobox)
-   [Storybook Docs](https://ebay.github.io/ebayui-core/?path=/docs/form-input-ebay-combobox)
-   [Code Examples](https://github.com/eBay/ebayui-core/tree/master/src/components/ebay-combobox/examples)
`;let P=class extends Marko.Component{onCreate(e){this.state={selected:e.selected??[]}}onInput(e){e.selected===null?this.state.selected=[]:e.selected&&(this.state.selected=e.selected)}handleKeydown(e){M(e,()=>{const o=e.target.value;o&&(e.preventDefault(),this.selectChip(o))})}selectChip(e){this.state.selected.includes(e)||(this.state.selected=[...this.state.selected,e],this.emit("change",{selected:this.state.selected}))}handleDelete(e){this.state.selected=[...this.state.selected.slice(0,e),...this.state.selected.slice(e+1)],this.emit("change",{selected:this.state.selected})}};const p="vi9tlnTe",a=T(p),V=a;B.r(p,()=>a);const x=P;a._=I(function(i,e,o,n,s,A){const{options:g,selected:F,class:_,fluid:C,error:k,value:G,disabled:r,a11yDeleteButton:w="Remove",...v}=i;e.be("span",{class:R(["chips-combobox",C&&"chips-combobox--fluid",k&&"chips-combobox--error",_]),"aria-disabled":r&&"true"},"0",n,null,0);{if(s.selected&&s.selected.length){e.be("ul",{class:"chips-combobox__items"},"1",n,null,1);{let l=0;for(const c of s.selected||[]){let m=l++;const b=`[${m}]`;e.be("li",null,"2"+b,n,null,0),h(K,{a11yDeleteButton:w,disabled:r,renderBody:S=>{S.t(c,n)}},e,o,"3"+b,[["delete","handleDelete",!1,[m]]]),e.ee()}}e.ee()}const d=[];for(const l of g||[])(!s.selected||!s.selected.some(c=>c===l))&&d.push({text:l,[Symbol.iterator]:j});h(z,{class:"chips-combobox__combobox",disabled:r,chevronSize:"large",...v,autocomplete:"list",options:d},e,o,"4",[["keydown","handleKeydown",!1],["option-click","selectChip",!1],["expand","emit",!1,["expand"]],["collapse","emit",!1,["collapse"]]])}e.ee()},{t:p},x);a.Component=$(x,a._);const q=i=>({input:D(i)}),ue={title:"form input/ebay-chips-combobox",component:V,parameters:{docs:{description:{component:O}}},argTypes:{disabled:{type:"boolean",control:{type:"boolean"},description:"sets the disabled attribute of the input"},expanded:{control:{type:"boolean"},description:"sets whether the listbox is expanded"},fluid:{control:{type:"boolean"},type:"boolean",description:"If true, combobox will span the entire width of it's container"},error:{control:{type:"boolean"},type:"boolean",description:"sets the error state of the input"},listSelection:{control:{type:"text"},description:"default is `automatic`; available values are `automatic`, `manual`. If set to automatic will automatically fill in the input with the currently highlighted item when using the up/down keys."},a11yDeleteButton:{control:{type:"text"},description:"The aria-label for the delete button on each chip."},roledescription:{control:{type:"text"},description:"The role description for accessibility. Default text is set and will be in english. Pass this to override for different locales"},options:{type:"array",control:{type:"object"},description:"array of autofill options to display"},onChange:{action:"on-change",table:{category:"Events",defaultValue:{summary:"{ selected }"}},description:"fires when the selected chips change"},onCollapse:{action:"on-collapse",table:{category:"Events"},description:" collapsed content"},onExpand:{action:"on-expand",table:{category:"Events"},description:" expanded content"}}},t=q.bind({});t.args={options:["football","baseball","basketball","hockey","soccer","volleyball","golf","tennis"]};t.parameters={docs:{source:{code:E("ebay-combobox",t.args,{options:"option"})}},expanded:{table:{category:"disabled"}}};var y,u,f;t.parameters={...t.parameters,docs:{...(y=t.parameters)==null?void 0:y.docs,source:{originalSource:`args => ({
  input: addRenderBodies(args)
})`,...(f=(u=t.parameters)==null?void 0:u.docs)==null?void 0:f.source}}};const fe=["Isolated"];export{t as Isolated,fe as __namedExportsOrder,ue as default};
